name: CI/CD github Actions & Docker

on:
  push:
    branches: ["main", "develop"]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: make application-prod.yml
        if: contains(github.ref, 'main')
        run: |
          cd ./src/main/resources
          touch ./application.yml
          echo "${{ secrets.YML }}" > ./application.yml
        shell: bash

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean build -x test

      - name: Decode Docker Password
        id: decode
        run: echo "decoded-password=$(echo "${{ secrets.NCLOUD_SECRET_KEY }}" | base64 --decode)" >> $GITHUB_ENV

      - name: Log in to NCP Docker Registry
        env:
          DOCKER_USERNAME: ${{ secrets.NCLOUD_ACCESS_KEY }}
          DOCKER_PASSWORD: ${{ env.decoded-password }}
        run: echo "$DOCKER_PASSWORD" | docker login grwm-registry.kr.ncr.ntruss.com --username "$DOCKER_USERNAME" --password-stdin
        
      - name: build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_LOGIN }}/grwm-server:latest
          cache-from: type=registry,ref=${{ secrets.DOCKER_LOGIN }}/grwm-server:latest
          cache-to: type=inline

  dependency-submission:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Generate and submit dependency graph
        uses: gradle/actions/dependency-submission@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Setup SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            curl -o ncp-iam-authenticator -L https://github.com/NaverCloudPlatform/ncp-iam-authenticator/releases/latest/download/nncp-iam-authenticator_linux_arm64
            chmod +x ./ncp-iam-authenticator
            mkdir -p $HOME/bin && cp ./ncp-iam-authenticator $HOME/bin/ncp-iam-authenticator && export PATH=$PATH:$HOME/bin
            echo 'export PATH=$PATH:$HOME/bin' >> ~/.bash_profile
            echo "${{ secrets.KUBECONFIG }}" > /tmp/kubeconfig.yml
            export KUBECONFIG=/tmp/kubeconfig.yml

            kubectl set image deployment/grwm-server-deployment grwm-server-deployment=grwm-registry.kr.ncr.ntruss.com/grwm-server:latest \
            && kubectl annotate deployment/grwm-server-deployment kubernetes.io/change-cause="Image updated to grwm-registry.kr.ncr.ntruss.com/grwm-server:latest by GitHub Actions"

            if ! kubectl rollout status deployment/grwm-server-deployment --timeout=60s; then
              echo "Deployment failed, starting rollback..."
              kubectl rollout undo deployment/grwm-server-deployment
              echo "Rollback completed."
              exit 1
            else
              echo "Deployment succeeded."
            fi
